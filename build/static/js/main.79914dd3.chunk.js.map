{"version":3,"sources":["logo.svg","Services/AuthService.js","Components/HeaderComponent.js","Components/FooterComponent.js","Components/Login/EnterComponent.js","Components/Login/RegisterComponent.js","Firebase/FireConfig.js","Firebase/UseStoragesService.js","Components/Image/ProgressBar.js","Components/Image/UploadComponent.js","Components/Login/ProfileComponent.js","Services/FireService.js","Components/Image/Model.js","Firebase/UserFireStore.js","Components/Image/ImageGridUserComponent.js","Components/Image/ImageGridAllComponent.js","Components/Image/TagComponent.js","Firebase/ProfileFireStore.js","Components/Image/ImageGridProfileComponent.js","Components/HeaderHomeComponent.js","Components/Login/UpdatePasswordComponent.js","Components/Login/UpdateEmailComponent.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","localStorage","setItem","JSON","stringify","id","token","parse","getItem","accessToken","console","log","headers","passwordold","passwordnew","put","email","HeaderComponent","props","state","currentUser","undefined","user","AuthService","getCurrentUser","this","setState","logout","Navbar","expand","to","className","src","Toggle","aria-controls","Collapse","href","onClick","logOut","Nav","DropdownButton","menuAlign","Dropdown","Item","eventKey","Divider","Component","FooterComponent","class","required","value","role","EnterComponent","handleLogin","bind","onChangeUsername","onChangePassword","loading","message","e","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","login","history","push","window","location","reload","error","resMessage","toString","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","isEmail","vusername","vpassword","RegisterComponent","handleRegister","onChangeEmail","successful","register","firebase","apps","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","projectstorage","storage","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","tags","uploadedBy","useState","progress","setProgress","setError","url","setUrl","useEffect","storageRef","collectionRef","collection","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadComponent","fileName","types","selected","files","includes","ProfileComponent","deleteAccount","event","delete","substring","substr","create","Modal","show","selectedImg","setSelectedImg","selectedId","selectedUser","setSelectedUser","pathname","classList","contains","FireService","alt","UserFirestore","docsUser","setDocsUser","queryWho","where","orderBy","onSnapshot","documents","forEach","doc","ImageGridUser","setSelectedId","map","ImageGridAll","docs","setDocs","search","setSearch","bool1","color","placeholder","delimiters","TagComponent","suggestions","handleDelete","handleAddition","handleDrag","i","filter","tag","index","currPos","newPos","newTags","slice","splice","finalArray","obj","text","ReactTags","React","ProfileFirestore","ImageGridProfile","HeaderHomeComponent","UpdatePasswordComponent","mySubmitHandler","passwordOld","passwordNew","update_password","alert","oldPwHandler","newPwHandler","UpdateEmailComponent","update_email","App","Container","fluid","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79914dd3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import axios from \"axios\";\r\n\r\nconst API_URL = \"https://copic-security-service.herokuapp.com/security/\";\r\n\r\n\r\nclass AuthService{\r\n    login(username, password){\r\n        return axios\r\n            .post(API_URL + \"sign-in\", {\r\n                username,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data){\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            })\r\n    }\r\n    delete(id){\r\n        const currentUser = JSON.parse(localStorage.getItem('user'));\r\n        const token = currentUser.accessToken;\r\n        console.log(token)\r\n        return axios\r\n            .post(API_URL + \"delete/\" +id,  {},{\r\n                headers:{\r\n                    \"Authorization\": \"Bearer \" + token\r\n                }\r\n            });\r\n    }\r\n\r\n    update_password(username, passwordold , passwordnew){\r\n        const currentUser = JSON.parse(localStorage.getItem('user'));\r\n        const token = currentUser.accessToken;\r\n        return axios\r\n            .put(API_URL + \"update_password\",{\r\n            username,\r\n            passwordold,\r\n            passwordnew\r\n        },{\r\n                headers:{\r\n                    \"Authorization\": \"Bearer \" + token\r\n                }\r\n            }).then(response => {\r\n                console.log(response)\r\n                if (response.data){\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            })\r\n    }\r\n\r\n    update_email(username, passwordold , email){\r\n        const currentUser = JSON.parse(localStorage.getItem('user'));\r\n        const token = currentUser.accessToken;\r\n        return axios\r\n            .put(API_URL + \"update_email\",{\r\n                username,\r\n                passwordold,\r\n                email\r\n            },{\r\n                headers:{\r\n                    \"Authorization\": \"Bearer \" + token\r\n                }\r\n            }).then(response => {\r\n                console.log(response)\r\n                if (response.data){\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            })\r\n    }\r\n\r\n    logout(){\r\n        localStorage.setItem('user', null);\r\n    }\r\n\r\n    register(username, email, password){\r\n        return axios.post(API_URL + \"sign-up\", {\r\n            username,\r\n            email,\r\n            password\r\n        });\r\n    }\r\n\r\n    getCurrentUser(){\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n}\r\n\r\n\r\nexport default new AuthService();","import React, {Component} from 'react';\r\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button, DropdownButton, Dropdown} from \"react-bootstrap\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport AuthService from \"../Services/AuthService\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass HeaderComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentUser: undefined,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const user = AuthService.getCurrentUser();\r\n\r\n        if (user) {\r\n            this.setState({\r\n                currentUser: user\r\n            });\r\n        }\r\n    }\r\n\r\n    logOut() {\r\n        AuthService.logout();\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { currentUser } = this.state;\r\n\r\n\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <Navbar expand=\"lg\">\r\n                        <Link to={\"/\"}>\r\n                            <img className=\"logo\" src={process.env.PUBLIC_URL + '/logonormal.png'}/>\r\n                        </Link>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                            {currentUser ? (\r\n                                <div className=\"navbar-nav ml-auto\">\r\n                                    <li className=\"nav-item \">\r\n                                        <Link to={\"/upload\"} className=\"nav-link upload\">\r\n                                            Upload\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item \">\r\n                                        <Link to={\"/profile\"} className=\"nav-link profile\">\r\n                                            {currentUser.username}\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a href=\"/logout\" className=\"nav-link logout\" onClick={this.logOut}>\r\n                                            LogOut\r\n                                        </a>\r\n                                    </li>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"navbar-nav ml-auto\">\r\n                                    <li className=\"nav-item \">\r\n                                        <Link to={\"/login\"} className=\"nav-link login\">\r\n                                            Login\r\n                                        </Link>\r\n                                    </li>\r\n\r\n                                    <li className=\"nav-item \">\r\n                                        <Link to={\"/register\"} className=\"nav-link register\">\r\n                                            Sign Up\r\n                                        </Link>\r\n                                    </li>\r\n                                </div>\r\n                            )}\r\n\r\n                            <Nav >\r\n                                <DropdownButton menuAlign=\"right\" id=\"dropdown-menu-align-right\">\r\n                                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                                    <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                                </DropdownButton>\r\n\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;","import React, {Component} from 'react';\r\n\r\nclass FooterComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer class=\"page-footer font-small blue\">\r\n\r\n                    <div class=\"footer-copyright text-center py-3\">© 2020 Copyright: CoPic\r\n                    </div>\r\n\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterComponent;","import Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../../Services/AuthService\";\r\n\r\nimport React, { Component } from 'react';\r\n\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nclass EnterComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n    \r\n        this.state = {\r\n          username: \"\",\r\n          password: \"\",\r\n          loading: false,\r\n          message: \"\"\r\n        };\r\n      }\r\n    \r\n      onChangeUsername(e) {\r\n        this.setState({\r\n          username: e.target.value\r\n        });\r\n      }\r\n    \r\n      onChangePassword(e) {\r\n        this.setState({\r\n          password: e.target.value\r\n        });\r\n      }\r\n    \r\n      handleLogin(e) {\r\n        e.preventDefault();\r\n    \r\n        this.setState({\r\n          message: \"\",\r\n          loading: true\r\n        });\r\n    \r\n        this.form.validateAll();\r\n    \r\n        if (this.checkBtn.context._errors.length === 0) {\r\n          AuthService.login(this.state.username, this.state.password).then(\r\n            () => {\r\n              this.props.history.push(\"/profile\");\r\n              window.location.reload();\r\n            },\r\n            error => {\r\n              const resMessage =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n    \r\n              this.setState({\r\n                loading: false,\r\n                message: resMessage\r\n              });\r\n            }\r\n          );\r\n        } else {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        }\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12\">\r\n              <div className=\"card card-container\">\r\n                \r\n      \r\n                <Form\r\n                  onSubmit={this.handleLogin}\r\n                  ref={c => {\r\n                    this.form = c;\r\n                  }}\r\n                >\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"username\"\r\n                      value={this.state.username}\r\n                      onChange={this.onChangeUsername}\r\n                      validations={[required]}\r\n                    />\r\n                  </div>\r\n      \r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      name=\"password\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                      validations={[required]}\r\n                    />\r\n                  </div>\r\n                    <div className=\"form-group\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        name=\"submit\"\r\n                      className=\"btn btn-primary btn-block\"\r\n                      disabled={this.state.loading}\r\n                    >\r\n                      {this.state.loading && (\r\n                        <span className=\"spinner-border spinner-border-sm\"></span>\r\n                      )}\r\n                      <span>Login</span>\r\n                    </button>\r\n                  </div>\r\n      \r\n                  {this.state.message && (\r\n                    <div className=\"form-group\">\r\n                      <div className=\"alert alert-danger\" role=\"alert\">\r\n                        {this.state.message}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <CheckButton\r\n                    style={{ display: \"none\" }}\r\n                    ref={c => {\r\n                      this.checkBtn = c;\r\n                    }}\r\n                  />\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default EnterComponent;","import React, {Component} from 'react';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport {isEmail} from \"validator\";\r\n\r\nimport AuthService from \"../../Services/AuthService\";\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vusername = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The username must be between 3 and 20 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vpassword = value => {\r\n    if (value.length < 2 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nclass RegisterComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            successful: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeEmail(e) {\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleRegister(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            successful: false\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.register(\r\n                this.state.username,\r\n                this.state.email,\r\n                this.state.password\r\n            ).then(\r\n                response => {\r\n                    this.setState({\r\n                        message: response.data.message,\r\n                        successful: true\r\n                    });\r\n                    this.props.history.push(\"/login\");\r\n                    window.location.reload();\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        successful: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card card-container\">\r\n\r\n\r\n                    <Form\r\n                        onSubmit={this.handleRegister}\r\n                        ref={c => {\r\n                            this.form = c;\r\n                        }}\r\n                    >\r\n                        {!this.state.successful && (\r\n                            <div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"username\">Username</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        validations={[required, vusername]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.onChangeEmail}\r\n                                        validations={[required, email]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <Input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChangePassword}\r\n                                        validations={[required, vpassword]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {this.state.message && (\r\n                            <div className=\"form-group\">\r\n                                <div\r\n                                    className={\r\n                                        this.state.successful\r\n                                            ? \"alert alert-success\"\r\n                                            : \"alert alert-danger\"\r\n                                    }\r\n                                    role=\"alert\"\r\n                                >\r\n                                    {this.state.message}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <CheckButton\r\n                            style={{display: \"none\"}}\r\n                            ref={c => {\r\n                                this.checkBtn = c;\r\n                            }}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterComponent;\r\n\r\n\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBcns3Lw2xlkPHKGTQiFg4s_woXnE-fQC0\",\r\n    authDomain: \"copic-fire.firebaseapp.com\",\r\n    projectId: \"copic-fire\",\r\n    storageBucket: \"copic-fire.appspot.com\",\r\n    messagingSenderId: \"62908836507\",\r\n    appId: \"1:62908836507:web:3a5852f6823160a0ec743e\",\r\n    measurementId: \"G-HQQLC3M212\"\r\n};\r\n\r\n// Initialize Firebase\r\nif (firebase.apps.length === 0) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\n\r\nconst projectstorage = firebase.storage();\r\nconst firestore = firebase.firestore();\r\n\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp();\r\n\r\nexport {projectstorage, firestore, timestamp};","import React, {useState, useEffect, Component} from 'react';\r\nimport { projectstorage, firestore , timestamp} from \"./FireConfig\";\r\nimport AuthService from \"../Services/AuthService\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStorage = (file) => {\r\n\r\n    const currentUser = JSON.parse(localStorage.getItem('user'));\r\n    const tags = JSON.parse(localStorage.getItem('tags'));\r\n    const uploadedBy = currentUser.username;\r\n\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() =>{\r\n\r\n        //references\r\n        const storageRef = projectstorage.ref(file.name);\r\n        const collectionRef = firestore.collection('images');\r\n\r\n\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp;\r\n            await collectionRef.add({ url, createdAt, uploadedBy, tags});\r\n            setUrl(url);\r\n        })\r\n    }, [file]);\r\n\r\n    return{ progress, error, url}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default useStorage;","import React, {useEffect} from \"react\";\r\nimport useStorage from \"../../Firebase/UseStoragesService\";\r\n\r\nconst ProgressBar = ({file, setFile}) =>{\r\n\r\n    const { url, progress} = useStorage(file);\r\n\r\n\r\n    useEffect(() => {\r\n        if (url){\r\n            setFile(null);\r\n        }\r\n    }, [url], setFile);\r\n\r\n    return(\r\n        <div className=\"progress-bar\" style={{ width: progress + '%' }}></div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProgressBar;","import React, {Component, useState} from 'react';\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\n\r\n\r\nconst UploadComponent = () => {\r\n\r\n    const [file, setFile] = useState(null);\r\n\r\n    const [fileName, setFileName] = useState(null)\r\n\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    localStorage.setItem('uploadedBy', null);\r\n\r\n    const types = ['image/png', 'image/jpeg', 'image/gif'];\r\n\r\n    const changeHandler = (e) =>{\r\n        let selected = e.target.files[0];\r\n        if (selected && types.includes(selected.type)){\r\n            setFile(selected);\r\n            setError('');\r\n        }else {\r\n            setFile(null);\r\n            setError(\"Please select a image (png, jpeg or gif)\")\r\n        }\r\n    }\r\n\r\n\r\n    console.log(fileName);\r\n\r\n    return (\r\n        <div>\r\n\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <input type=\"file\" onChange={changeHandler}/>\r\n                </div>\r\n            </form>\r\n            <div className=\"output\">\r\n                {error && <div className=\"error\">{error}</div>}\r\n                {file && <div>{ file.name }</div>}\r\n                {file && <ProgressBar file={file} setFile={setFile} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadComponent;","\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport AuthService from '../../Services/AuthService';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass ProfileComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentUser: AuthService.getCurrentUser()\r\n        };\r\n    }\r\n\r\n    deleteAccount = (event) => {\r\n        const currentUser = JSON.parse(localStorage.getItem('user'));\r\n        const id = currentUser.id;\r\n        AuthService.delete(id)\r\n        AuthService.logout();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { currentUser } = this.state;\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <header className=\"jumbotron\">\r\n                    <h3>\r\n                        <strong>{currentUser.username}</strong> Profile\r\n                    </h3>\r\n                </header>\r\n                <p>\r\n                    <strong>Token:</strong>{\" \"}\r\n                    {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n                    {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n                </p>\r\n                <p>\r\n                    <strong>Email:</strong>{\" \"}\r\n                    {currentUser.email}\r\n                </p>\r\n                <p>\r\n                    <Link to={\"/update_password\"}>\r\n                        <button>Update password</button>\r\n                    </Link>\r\n                </p>\r\n                <p>\r\n                    <Link to={\"/update_email\"}>\r\n                        <button>Update email</button>\r\n                    </Link>\r\n                </p>\r\n                <p>\r\n                    <Link to={\"/\"}>\r\n                        <button onClick={this.deleteAccount} className=\"btn-danger\">Delete Account</button>\r\n                    </Link>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileComponent;\r\n\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"https://copic-media-service.herokuapp.com/media/\";\r\n\r\nclass FireService{\r\n\r\n    delete(id){\r\n\r\n        let axiosService=axios.create({\r\n                headers: {\r\n                    id: id\r\n                }\r\n            }\r\n        );\r\n        return axiosService.post(API_URL + \"delete\");\r\n    }\r\n}\r\n\r\nexport default new FireService;","import React, {useState} from \"react\";\r\nimport FireService from \"../../Services/FireService\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Modal = ( { selectedImg, setSelectedImg, selectedId, selectedUser, setSelectedUser} ) => {\r\n\r\n\r\n    const currentUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n    let show;\r\n    if(currentUser){\r\n        if (currentUser.username == selectedUser && window.location.pathname != \"/home\"){\r\n            show = true;\r\n        }\r\n    }\r\n    const handleClick = (e) => {\r\n        if(e.target.classList.contains('backdrop')){\r\n            setSelectedImg(null);\r\n            localStorage.setItem('uploadedBy', null)\r\n        }\r\n    }\r\n\r\n    const profileClick = (e) => {\r\n        setSelectedImg(null);\r\n    }\r\n\r\n    const deleteClick = (e) => {\r\n        FireService.delete(selectedId).then(e => {console.log(\"succes\")});\r\n        setSelectedImg(null);\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"backdrop\" onClick={handleClick}>\r\n            <div className=\"background\">\r\n                <Link to={`/selected/${selectedUser}`} onClick={profileClick} className=\"nav-link user\">\r\n                    Uploaded by : {selectedUser}\r\n                </Link>\r\n                {show && <button name=\"delete\" className=\"btn-danger\" onClick={deleteClick}>Delete Image</button>}\r\n                <img src={selectedImg} alt=\"Enlarged picture\"/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Modal;","import React, {Component, createRef, useEffect, useState} from \"react\";\r\nimport {firestore} from \"./FireConfig\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst UserFirestore = (collection) =>{\r\n\r\n\r\n    const currentUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n    const uploadedBy = currentUser.username;\r\n\r\n    const [docsUser, setDocsUser] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubUser = firestore.collection(collection);\r\n        const queryWho = unsubUser.where(\"uploadedBy\", \"==\", uploadedBy).orderBy('createdAt', 'desc')\r\n            .onSnapshot((snap) =>\r\n\r\n            {\r\n                let documents = [];\r\n                snap.forEach(doc => {\r\n                    documents.push({...doc.data(), id: doc.id});\r\n                });\r\n                setDocsUser(documents);\r\n            });\r\n\r\n        return () => queryWho();\r\n\r\n\r\n    },[collection])\r\n\r\n    return{ docsUser};\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default UserFirestore;\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport UserFirestore from '../../Firebase/UserFireStore'\r\n\r\nconst ImageGridUser = ({setSelectedImg, setSelectedId, setSelectedUser}) => {\r\n\r\n\r\n    const { docsUser } = UserFirestore('images');\r\n\r\n\r\n\r\n        return(\r\n            <div className=\"img-grid\">\r\n                { docsUser && docsUser.map(doc => (\r\n                    <div className=\"img-wrap\" key={doc.id} onClick={() =>\r\n                        setSelectedImg(doc.url) +\r\n                        setSelectedId(doc.id) +\r\n                        setSelectedUser(doc.uploadedBy)\r\n                    }>\r\n                        <img src={doc.url} alt={doc.id} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ImageGridUser;","import React, {useEffect, useState} from \"react\";\r\nimport allFirestore from \"../../Firebase/AllFireStore\";\r\nimport {firestore} from \"../../Firebase/FireConfig\";\r\nimport {forEach} from \"react-bootstrap/ElementChildren\";\r\n\r\nconst ImageGridAll = ({setSelectedImg, setSelectedUser}) => {\r\n    // const { docs } = allFirestore('images');\r\n    const [docs, setDocs] = useState([]);\r\n    const [search , setSearch] = useState(null);\r\n    const [error , setError] = useState(null)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const changeHandler = (e) =>{\r\n        setSearch(e.target.value)\r\n    }\r\n    //\r\n    // (e) => setSearch(e.target.value)\r\n\r\n\r\n\r\n    // class getCollection {\r\n    //\r\n    // }\r\n\r\n    useEffect((e) => {\r\n        let bool1 = search != null;\r\n        // let bool2 = search == \"\";\r\n        if(search == \"\"){\r\n            setSearch(null);\r\n        }\r\n\r\n        if(bool1){\r\n             firestore.collection(\"images\").where('tags', \"array-contains\",search)\r\n                .onSnapshot((snap) => {\r\n                    let documents = [];\r\n                    snap.forEach(doc => {\r\n                        documents.push({...doc.data(), id: doc.id});\r\n                    });\r\n                    setDocs(documents);\r\n                    if (docs.length  >= 1){\r\n                        setError(\"\");\r\n                    }else {\r\n                        setError(\"Nothing found!\");\r\n                    }\r\n                });\r\n        } else{\r\n            setError(\"\");\r\n            firestore.collection(\"images\").orderBy('createdAt', 'desc')\r\n                .onSnapshot((snap) => {\r\n                    let documents = [];\r\n                    snap.forEach(doc => {\r\n                        documents.push({...doc.data(), id: doc.id});\r\n                    });\r\n                    setDocs(documents);\r\n                });\r\n        }\r\n    });\r\n\r\n\r\n\r\n    return(\r\n\r\n        <div>\r\n            <img className=\"bg-img\" src={process.env.PUBLIC_URL + '/pexels-nika-akin-3475133 1.png'}/>\r\n            <img className=\"bg-figure\" src={process.env.PUBLIC_URL + '/Vectorgood.png'}/>\r\n            <h1 className=\"home-text\">\r\n                The best free stock photos,<br/>\r\n                with a touch of <span style={{color: \"#61C77D\"}}>color</span><br/>\r\n                shared by talented creators.\r\n            </h1>\r\n            <input type=\"text\" className=\"form-control searchbar\" placeholder=\"Search...\" onChange={changeHandler}/>\r\n            <div>{error}</div>\r\n            <div className=\"img-grid\">\r\n                { docs && docs.map(doc => (\r\n                    <div className=\"img-wrap\" key={doc.id} onClick={() => setSelectedImg(doc.url)\r\n                        + setSelectedUser(doc.uploadedBy)\r\n                        + localStorage.setItem('uploadedBy', doc.uploadedBy)}>\r\n                        <img src={doc.url} alt=\"Uploaded pic\" />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ImageGridAll;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { WithContext as ReactTags } from 'react-tag-input';\r\n\r\nconst KeyCodes = {\r\n    comma: 188,\r\n    enter: 13,\r\n};\r\n\r\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n\r\n\r\n\r\nclass TagComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tags: [\r\n            ],\r\n            suggestions: [\r\n            ]\r\n        };\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleAddition = this.handleAddition.bind(this);\r\n        this.handleDrag = this.handleDrag.bind(this);\r\n    }\r\n\r\n    handleDelete(i) {\r\n        const { tags } = this.state;\r\n        this.setState({\r\n            tags: tags.filter((tag, index) => index !== i),\r\n        });\r\n    }\r\n\r\n    handleAddition(tag) {\r\n        this.setState(state => ({ tags: [...state.tags, tag] }));\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    handleDrag(tag, currPos, newPos) {\r\n        const tags = [...this.state.tags];\r\n        const newTags = tags.slice();\r\n\r\n        newTags.splice(currPos, 1);\r\n        newTags.splice(newPos, 0, tag);\r\n\r\n        // re-render\r\n        this.setState({ tags: newTags });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { tags, suggestions } = this.state;\r\n\r\n        const finalArray = tags.map((obj) =>{\r\n            return obj.text;\r\n        });\r\n\r\n\r\n        let a = JSON.stringify(tags);\r\n\r\n        console.log(finalArray)\r\n        localStorage.setItem('tags', JSON.stringify(finalArray));\r\n\r\n        return (\r\n            <div>\r\n                <ReactTags tags={tags}\r\n                           suggestions={suggestions}\r\n                           handleDelete={this.handleDelete}\r\n                           handleAddition={this.handleAddition}\r\n                           handleDrag={this.handleDrag}\r\n                           delimiters={delimiters} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default TagComponent;\r\n// ReactDOM.render(<TagComponent/>, document.getElementById('app'));","import {useEffect, useState} from \"react\";\r\nimport {firestore} from \"./FireConfig\";\r\n\r\n\r\nconst ProfileFirestore = (collection) =>{\r\n\r\n\r\n    const currentUser = localStorage.getItem('uploadedBy');\r\n\r\n\r\n\r\n    const [docsUser, setDocsUser] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubUser = firestore.collection(collection);\r\n        const queryWho = unsubUser.where(\"uploadedBy\", \"==\", currentUser).orderBy('createdAt', 'desc')\r\n            .onSnapshot((snap) =>\r\n\r\n            {\r\n                let documents = [];\r\n                snap.forEach(doc => {\r\n                    documents.push({...doc.data(), id: doc.id});\r\n                });\r\n                setDocsUser(documents);\r\n            });\r\n\r\n        return () => queryWho();\r\n\r\n\r\n    },[collection])\r\n\r\n    return{ docsUser};\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default ProfileFirestore;","import React, {useState} from \"react\";\r\nimport ProfileFirestore from \"../../Firebase/ProfileFireStore\";\r\n\r\nconst ImageGridProfile = ({setSelectedImg, setSelectedId, setSelectedUser}) => {\r\n\r\n    const uploadedBy = localStorage.getItem('uploadedBy' );\r\n\r\n    const { docsUser } = ProfileFirestore('images');\r\n\r\n\r\n\r\n        return(\r\n            <div className=\"img-grid\">\r\n                { docsUser && docsUser.map(doc => (\r\n                    <div className=\"img-wrap\" key={doc.id} onClick={() =>\r\n                        setSelectedImg(doc.url) +\r\n                        setSelectedId(doc.id) +\r\n                        setSelectedUser(doc.uploadedBy)\r\n                    }>\r\n                        <img src={doc.url} alt=\"Uploaded pic\" />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ImageGridProfile;","import React, {Component} from 'react';\r\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button, DropdownButton, Dropdown} from \"react-bootstrap\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport AuthService from \"../Services/AuthService\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass HeaderHomeComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentUser: undefined,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const user = AuthService.getCurrentUser();\r\n\r\n        if (user) {\r\n            this.setState({\r\n                currentUser: user\r\n            });\r\n        }\r\n    }\r\n\r\n    logOut() {\r\n        AuthService.logout();\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { currentUser } = this.state;\r\n\r\n\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <Navbar expand=\"lg\">\r\n                        <Link to={\"/\"}>\r\n                            <img className=\"logo\" src={process.env.PUBLIC_URL + '/logo.png'}/>\r\n                        </Link>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                            {currentUser ? (\r\n                                <div className=\"navbar-nav ml-auto\">\r\n                                    <li className=\"nav-item \">\r\n                                        <Link to={\"/upload\"} className=\"nav-link whitetext upload\">\r\n                                            Upload\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item \">\r\n                                        <Link to={\"/profile\"} className=\"nav-link whitetext profile\">\r\n                                            {currentUser.username}\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a href=\"/logout\" className=\"nav-link whitetext logout\" onClick={this.logOut}>\r\n                                            LogOut\r\n                                        </a>\r\n                                    </li>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"navbar-nav ml-auto\">\r\n                                    <li className=\"nav-item \">\r\n                                        <Link to={\"/login\"} className=\"nav-link whitetext login\">\r\n                                            Login\r\n                                        </Link>\r\n                                    </li>\r\n\r\n                                    <li className=\"nav-item \">\r\n                                        <Link to={\"/register\"} className=\"nav-link whitetext register\">\r\n                                            Sign Up\r\n                                        </Link>\r\n                                    </li>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/*<Nav >*/}\r\n                            {/*    <DropdownButton menuAlign=\"right\" id=\"dropdown-menu-align-right\">*/}\r\n                            {/*        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>*/}\r\n                            {/*        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>*/}\r\n                            {/*        <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>*/}\r\n                            {/*        <Dropdown.Divider />*/}\r\n                            {/*        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>*/}\r\n                            {/*    </DropdownButton>*/}\r\n\r\n                            {/*</Nav>*/}\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderHomeComponent;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport AuthService from \"../../Services/AuthService\";\r\nimport Input from \"react-validation/build/input\";\r\n\r\n\r\n\r\n\r\n\r\nclass UpdatePasswordComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { passwordOld: '' };\r\n        this.state = { passwordNew: '' };\r\n    }\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const currentUser = JSON.parse(localStorage.getItem('user'));\r\n        const uploadedBy = currentUser.username;\r\n\r\n\r\n        console.log(this.state.passwordOld)\r\n        console.log(this.state.passwordNew)\r\n\r\n        const passwordOld = this.state.passwordOld;\r\n        const passwordNew = this.state.passwordNew;\r\n\r\n        console.log(passwordOld)\r\n        console.log(passwordNew)\r\n\r\n        AuthService.update_password(\r\n            uploadedBy,\r\n            passwordOld,\r\n            passwordNew\r\n        ).then(\r\n            () => {\r\n                alert(\"Password changed!\")\r\n                window.location.reload();\r\n            });\r\n    }\r\n\r\n    oldPwHandler = (event) => {\r\n        this.setState({passwordOld: event.target.value});\r\n    }\r\n    newPwHandler = (event) => {\r\n        this.setState({passwordNew: event.target.value});\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.mySubmitHandler}>\r\n                <p>Old Password</p>\r\n                <input\r\n                    type='password'\r\n                    onChange={this.oldPwHandler}\r\n                />\r\n                <p>New Password</p>\r\n                <input\r\n                    type='password'\r\n                    onChange={this.newPwHandler}\r\n                />\r\n                <input\r\n                    type='submit'\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdatePasswordComponent;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport AuthService from \"../../Services/AuthService\";\r\nimport Input from \"react-validation/build/input\";\r\n\r\n\r\n\r\n\r\n\r\nclass UpdateEmailComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { passwordOld: '' };\r\n        this.state = { email: '' };\r\n    }\r\n    mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const currentUser = JSON.parse(localStorage.getItem('user'));\r\n        const uploadedBy = currentUser.username;\r\n\r\n\r\n        console.log(this.state.passwordOld)\r\n        console.log(this.state.email)\r\n\r\n        const passwordOld = this.state.passwordOld;\r\n        const email = this.state.email;\r\n\r\n        console.log(passwordOld)\r\n        console.log(email)\r\n\r\n        AuthService.update_email(\r\n            uploadedBy,\r\n            passwordOld,\r\n            email\r\n        ).then(\r\n            () => {\r\n                alert(\"Email changed!\")\r\n                window.location.reload();\r\n            });\r\n    }\r\n\r\n    oldPwHandler = (event) => {\r\n        this.setState({passwordOld: event.target.value});\r\n    }\r\n    newPwHandler = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.mySubmitHandler}>\r\n                <p>Old Password</p>\r\n                <input\r\n                    type='password'\r\n                    onChange={this.oldPwHandler}\r\n                />\r\n                <p>New Email</p>\r\n                <input\r\n                    type='email'\r\n                    onChange={this.newPwHandler}\r\n                />\r\n                <input\r\n                    type='submit'\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateEmailComponent;","import logo from './logo.svg';\nimport './App.css';\nimport 'react-bootstrap'\nimport {Container, Row, Table} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport firebase from \"firebase\";\n\n\n\n\n\nimport HeaderComponent from \"./Components/HeaderComponent\";\nimport FooterComponent from \"./Components/FooterComponent\";\nimport CreateUserComponent from \"./Components/CreateUserComponent\";\n\nimport EnterComponent from \"./Components/Login/EnterComponent\";\nimport RegisterComponent from \"./Components/Login/RegisterComponent\";\n\nimport UploadComponent from \"./Components/Image/UploadComponent\";\n\n\nimport ProfileComponent from \"./Components/Login/ProfileComponent\";\n\n\nimport AuthService from \"./Services/AuthService\";\nimport Modal from \"./Components/Image/Model\";\nimport React, {useState} from \"react\";\nimport ImageGridUser from \"./Components/Image/ImageGridUserComponent\";\nimport ImageGridAll from \"./Components/Image/ImageGridAllComponent\";\nimport TagComponent from \"./Components/Image/TagComponent\";\nimport UserFirestore from \"./Firebase/UserFireStore\";\nimport ImageGridProfile from \"./Components/Image/ImageGridProfileComponent\";\nimport HeaderHomeComponent from \"./Components/HeaderHomeComponent\";\nimport UpdatePasswordComponent from \"./Components/Login/UpdatePasswordComponent\";\nimport UpdateEmailComponent from \"./Components/Login/UpdateEmailComponent\";\n\n\n\nfunction App() {\n\n\n    // this.state = {\n    //     currentUser: undefined\n    // };\n\n    // componentDidMount(){\n    //     const user = AuthService.getCurrentUser();\n    //\n    //     if (user){\n    //         this.setState({\n    //             currentUser: AuthService.getCurrentUser()\n    //         });\n    //     }\n    // }\n    const [selectedImg, setSelectedImg] = useState(null);\n    const [selectedId, setSelectedId] = useState(null);\n    const [selectedUser, setSelectedUser] = useState(null);\n\n    // let header1 = false;\n    // let header2 = false;\n    //\n    // if (window.location.href == \"http:://localhost:3000/home\"){\n    //     console.log(\"if\")\n    //     header1 = true;\n    // }else if(window.location.pathname == \"/upload\" || window.location.pathname == \"/profile\") {\n    //     console.log(\"else\")\n    //     header2 =true;\n    // }\n    //\n    // console.log(window.location.pathname)\n\n\n\n\n\n    return (\n        <div className=\"App\">\n            <Container fluid>\n                <Router>\n                        <div className=\"content-padding\">\n\n                            <Switch>\n                                <Route path=\"/login\" component={EnterComponent}/>\n                                <Route path=\"/profile\" >\n                                    <HeaderComponent/>\n                                    <ProfileComponent/>\n                                </Route>\n                                <Route path=\"/update_password\" component={UpdatePasswordComponent} />\n                                <Route path=\"/update_email\" component={UpdateEmailComponent} />\n                                <Route path=\"/register\" component={RegisterComponent}/>\n                                <Route path={`/selected/${selectedUser}`}>\n                                    <HeaderComponent/>\n                                    <ImageGridProfile/>\n                                </Route>\n                                <Route path=\"/upload\">\n                                    <HeaderComponent/>\n                                    <TagComponent/>\n                                    <UploadComponent/>\n                                    <ImageGridUser setSelectedImg={setSelectedImg} setSelectedId={setSelectedId} setSelectedUser={setSelectedUser}/>\n                                    {selectedImg && <Modal selectedImg={selectedImg} selectedId={selectedId} setSelectedUser={setSelectedUser} selectedUser={selectedUser} setSelectedImg={setSelectedImg} />}\n                                </Route>\n                                <Route path=\"/\">\n                                    <HeaderHomeComponent/>\n                                    <Redirect to=\"/home\" />\n                                    <ImageGridAll setSelectedImg={setSelectedImg} setSelectedUser={setSelectedUser}/>\n                                    {selectedImg && <Modal selectedImg={selectedImg} setSelectedUser={setSelectedUser} selectedUser={selectedUser} setSelectedImg={setSelectedImg} />}\n                                </Route>\n                            </Switch>\n                        </div>\n\n                    <FooterComponent/>\n                </Router>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}